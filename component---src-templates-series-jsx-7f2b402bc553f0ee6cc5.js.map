{"version":3,"file":"component---src-templates-series-jsx-7f2b402bc553f0ee6cc5.js","mappings":"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","sources":["webpack://gatsby-starter-hoodie/./src/components/Divider/index.jsx","webpack://gatsby-starter-hoodie/./src/components/PostList/index.jsx","webpack://gatsby-starter-hoodie/./src/templates/Series.jsx"],"sourcesContent":["import PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Divider = styled.hr`\n  margin-top: ${props => props.mt};\n  margin-bottom: ${props => props.mb};\n  border: none;\n  border-bottom: 1px solid ${props => props.theme.colors.divider};\n`\n\nDivider.propTypes = {\n  mt: PropTypes.string,\n  mb: PropTypes.string,\n}\n\nDivider.defaultProps = {\n  mt: \"30px\",\n  mb: \"30px\",\n}\n\nexport default Divider\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\nimport { Link } from \"gatsby\"\nimport dayjs from \"dayjs\"\nimport { useSelector } from \"react-redux\"\n// import Divider from \"components/Divider\"\n// import TagList from \"components/TagList\"\n\nconst PostListWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`\n\nconst PostWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n  margin-bottom: 100px;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  font-size: 14.4px;\n  color: #868e96;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.7;\n  margin: 18px 0 25px;\n  font-size: 16px;\n  color: #495057;\n  overflow: hidden;\n  white-space: normal;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  word-break: keep-all;\n\n  @media (max-width: 768px) {\n    margin: 15px 0 20px;\n    font-size: 14.5px;\n  }\n\n  &.dark {\n    color: rgb(175, 185, 195);\n  }\n`\n\nconst PostTitle = styled.h1`\n  font-size: 25px;\n  font-weight: 700;\n  line-height: 1.4;\n  color: #212529;\n  word-break: break-all;\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n\n  & > a {\n    text-decoration: none;\n    color: inherit;\n    transition: all 0.2s;\n  }\n\n  & > a:hover {\n    color: ${props => props.theme.colors.secondaryText};\n  }\n\n  &.dark {\n    color: #fff;\n  }\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst PostList = ({ postList }) => {\n  const { theme } = useSelector(state => state.theme)\n  const [postCount, setPostCount] = useState(10)\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && postCount < postList.length) {\n      setTimeout(() => setPostCount(postCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [postCount, postList])\n\n  useEffect(() => {\n    setPostCount(10)\n  }, [postList])\n\n  return (\n    <PostListWrapper>\n      {postList.slice(0, postCount).map((post, i) => {\n        const { title, description, date } = post.frontmatter\n        const { excerpt } = post\n        const { slug } = post.fields\n\n        return (\n          <div key={i} className={i === 0 ? \"first_post_list\" : \"\"}>\n            <PostWrapper>\n              <PostTitle className={theme}>\n                <Link to={slug}>{title}</Link>\n              </PostTitle>\n              {description ? (\n                <Excerpt className={theme}>{description}</Excerpt>\n              ) : (\n                <Excerpt className={theme}>{excerpt}</Excerpt>\n              )}\n              <Date>{dayjs(date).format(\"YYYY월 M월 D일\")} </Date>\n              {/* <TagList tagList={tags} /> */}\n            </PostWrapper>\n\n            {/* {postCount - 1 !== i && postList.length - 1 !== i && (\n              <Divider mt=\"30px\" mb=\"32px\" />\n            )} */}\n          </div>\n        )\n      })}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport Layout from \"components/Layout\"\nimport SEO from \"components/SEO\"\nimport PostList from \"components/PostList\"\nimport Divider from \"components/Divider\"\n\nimport { description, siteUrl } from \"../../blog-config\"\nimport dayjs from \"dayjs\"\n\nconst Header = styled.div`\n  @media (max-width: 768px) {\n    padding: 0px 15px;\n  }\n`\n\nconst Title = styled.h1`\n  margin-bottom: 15px;\n  line-height: 1.2;\n  font-size: 40px;\n  font-weight: bold;\n  color: ${props => props.theme.colors.text};\n  word-break: break-all;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`\n\nconst Subtitle = styled.h3`\n  display: inline-block;\n  padding: 9px 11px 7px;\n  margin: 0 8px 8px 0;\n  border-radius: 50px;\n  background-color: ${props => (props.selected ? \"#6868ac\" : \"#f0f0f7\")};\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagText\n      : props.theme.colors.tagText};\n  text-decoration: none;\n  font-size: 14.4px;\n  transition: all 0.2s;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n    padding: 6px 8px 4px;\n  }\n\n  &.dark {\n    color: #fff;\n    background-color: ${props => (props.selected ? \"#6868ac\" : \"#252525\")};\n\n    &:hover {\n      opacity: 0.75;\n    }\n  }\n`\n\nconst SeriesInform = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  color: ${props => props.theme.colors.text};\n\n  & > span {\n    margin: 0 3px;\n  }\n`\n\nconst Date = styled.span`\n  color: rgb(73, 80, 87);\n  font-weight: lighter;\n\n  &.dark {\n    color: rgb(248, 249, 250);\n  }\n`\n\nconst Series = ({ pageContext, data }) => {\n  const seriesName = pageContext.series\n  const posts = data.posts.nodes\n  const { theme } = useSelector(state => state.theme)\n\n  return (\n    <Layout>\n      <SEO\n        title={`SERIES: ${seriesName}`}\n        description={description}\n        url={siteUrl}\n      />\n      <Header>\n        <Subtitle className={theme}> SERIES </Subtitle>\n        <Title> {seriesName} </Title>\n        <SeriesInform>\n          <span>{posts.length} Posts</span>\n          <span>·</span>\n          <Date className={theme}>\n            Last updated{\" \"}\n            {dayjs(posts[posts.length - 1].frontmatter.date).format(\n              \"YYYY월 MM월 DD일\"\n            )}\n          </Date>\n        </SeriesInform>\n        <Divider />\n      </Header>\n      <PostList postList={posts} />\n    </Layout>\n  )\n}\n\nexport default Series\n\nexport const pageQuery = graphql`\n  query BlogSeriesBySeriesName($series: String) {\n    posts: allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___date] }\n      filter: { frontmatter: { series: { eq: $series } } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMM DD, YYYY\")\n          title\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["Divider","styled","hr","withConfig","displayName","componentId","props","mt","mb","theme","colors","divider","propTypes","PropTypes","defaultProps","PostListWrapper","div","PostWrapper","Date","p","Excerpt","PostTitle","h1","secondaryText","_ref","postList","useSelector","state","postCount","setPostCount","useState","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","length","setTimeout","useEffect","window","addEventListener","removeEventListener","React","slice","map","post","i","title","description","date","frontmatter","excerpt","slug","fields","key","className","Link","to","dayjs","format","Header","Title","text","Subtitle","h3","selected","selectedTagText","tagText","SeriesInform","span","pageContext","data","seriesName","series","posts","nodes","Layout","SEO","url","siteUrl","PostList"],"sourceRoot":""}