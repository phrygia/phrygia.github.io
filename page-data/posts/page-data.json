{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","categories":["All","web","react","js","vue"],"edges":[{"node":{"id":"b679d0ad-1afc-5d98-9959-ed033770e3d6","excerpt":"ddd","fields":{"slug":"/react-modal/"},"frontmatter":{"categories":"react","title":"[react] 모달 팝업창 만들기 (react modal)","date":"September 21, 2021"}},"next":{"fields":{"slug":"/rwd-awd/"}},"previous":null},{"node":{"id":"ca34d272-ba35-53b4-b516-fe85edd4668b","excerpt":"퍼블리싱 프리랜서일을 할때면 자주 등장하는 용어가 바로 이란 단어다. 반응형이란 단어와 함께 언급되는 이란 단어도 있으며, 이 두 단어가 나올때마다 ‘도대체 무슨 차이지?’ 라는 의문도 따라온다. 퍼블리싱을 3년동안 했지만 반응형과 적응형의 차이에 대해 명확하게 설명하지 못하고 명확한 차이를 모른다고 생각됐기 때문에 이 두가지는 어떻게 다른지에 대해 알아보고자 조사하게 되었다.\n 반응형 vs 적응형  사진 출처 : https://uxplanet.org/ 1. 반응형: RWD(Responsive Web Design) *웹의 해상도, 레이아웃 등이 디바이스에 따라 반응하여 유동적으로 변환되는 웹페이지 \n과거의 웹을 사용하는 주요기기는 컴퓨터였으며, 모니터에 맞춰 화면의 크기와 레이아웃이 구성되었다. 2007년 애플사에서 아이폰을 출시하면서 스마트폰의 시대가 열렸고, 어디서든 손쉽게 웹사이트에 접근할 수 있게 되었다. 하지만 아래의 사진처럼 문제가 발생하였다. \n 바로 손바닥만한 기기에…","fields":{"slug":"/rwd-awd/"},"frontmatter":{"categories":"web","title":"[web] 반응형(RWD)웹과 적응형(AWD)웹","date":"September 21, 2021"}},"next":{"fields":{"slug":"/javascript-object/"}},"previous":{"fields":{"slug":"/react-modal/"}}},{"node":{"id":"42078212-df9b-5679-b60e-8c504d25e21b","excerpt":"는 블록 스코프이며, 변수의 재선언 및 재할당이 모두 불가능하다.\n흔히 여기서 오는 오해 중 하나가 const로 정의하면 객체 속성값도 수정할 수 없다고 생각하지만, const로 정의해도 객체의 내부 속성값은 수정이 가능하다. (객체를 참조하는 변수를 수정하는 것은 불가능 하다.) - JS  객체에서 이미 존재하는 속성값을 수정하거나 새로운 값을 추가하는 것은 모두 가능하다. 객체의 내부 속성값을 수정하지 못하게 하고 싶다면 유명한 불변성 패키지인 immer.js, immutable.js 등을 사용하면 된다. (immer.js는 리액트에서도 많이이 쓰이기 때문에 알아두면 좋다.) 이러한 패키지들은 기존 객체를 수정하지 않고 새롭게 객체를 생성한다.\n 다음의 JS내장 함수는 불변성 외부 패키지에서 새롭게 객체를 생성하는 편의성은 필요 없고 수정만 할 수 없도록 만들고 싶을 때 사용하면 유용하다. Object.preventExtensions Object.seal Object.freez…","fields":{"slug":"/javascript-object/"},"frontmatter":{"categories":"js","title":"[javascript] 객체 수정 제어 : preventExtensions(), seal(), freeze()","date":"September 21, 2021"}},"next":{"fields":{"slug":"/html-semantic-tag/"}},"previous":{"fields":{"slug":"/rwd-awd/"}}},{"node":{"id":"8b86069c-9898-55d4-a03e-06d64732b8b1","excerpt":"“HTML is the World Wide Web’s core markup language. Originally, HTML was primarily designed as a language for semantically describing scientific documents.” \n- “HTML은 World Wide Web의 핵심 markup 언어이다. 원래 HTML은 과학적인 문서를 로 설계되었다.” \n“Elements, attributes, and attribute values in HTML are defined (by this specification) to have certain meanings (semantics)” \n- “HTML의 요소와 속성 및 속성 값은 되었다.”  Semantic Tag 시맨틱 태그란? 흔히들 HTML5 시대에서 가장 큰 변화는 시맨틱 태그라고 말한다. semantic은 사전적인 의미로 ‘의미의, 의미론적인’라는 의미를 가지고 있다. \nHTML5 …","fields":{"slug":"/html-semantic-tag/"},"frontmatter":{"categories":"web","title":"[html] Semantic Tag Layout (시맨틱 태그)","date":"September 21, 2021"}},"next":{"fields":{"slug":"/vue-clap-button/"}},"previous":{"fields":{"slug":"/javascript-object/"}}},{"node":{"id":"3364b573-90b6-5890-8954-1b2f99c14a91","excerpt":"새로운 vue 프로젝트 사전미팅에서 장바구니에 담기는 액션을 부탁받았었다.\n\n출처 : react clap button\n 이런 방식으로 장바구니에 담기는 액션을 부탁받았는데, 아직 vue가 미숙한 나는 어떻게 코딩해야 할지 큰 고민에 빠졌었다. 어떻게 만들까? 1. npm에서 타인이 만든걸 사용할까? npm에서 clap button을 검색하여 위의 박수치는 액션을 찾았다. 정말 딱 내가 원하던 액션이었고 클라이언트가 보여준 액션과도 거의 흡사했다. ‘Wow! 딱 원하던거야! 역시 npm 최고! 내가 생각하는건 이미 남이 만들어 놨을줄 알았다니까? 가만히 보자… 어라? 그런데 이건 react잖아? 😥 아니야! 실망하긴 이르지!! react가 있으면 vue도 있을거야!’ 라는 생각으로 바로 npm 검색을 했고 vue clap button을 찾았다. ‘역시! react가 있으면 vue도 있었어!’ 흡족한 마음으로 테스트용 프로젝트에 모듈을 설치해보았다.\n그런데 내가 원하던 액션이 아니었다…","fields":{"slug":"/vue-clap-button/"},"frontmatter":{"categories":"vue","title":"[vue] 박수치기 버튼 만들기 (vue clap button)","date":"September 21, 2021"}},"next":null,"previous":{"fields":{"slug":"/html-semantic-tag/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}