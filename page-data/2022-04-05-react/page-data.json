{"componentChunkName":"component---src-templates-post-jsx","path":"/2022-04-05-react/","result":{"data":{"site":{"siteMetadata":{"title":"phrygia dev.log"}},"markdownRemark":{"id":"3f792d2c-3143-561e-9a78-cbf812f2d06c","excerpt":"최근 면접을 보면서 나의 코딩 스타일에 대해 생각하게 되었다. \n나는 많은 인강을 보면서 react를 독학한 케이스인데 아무래도 인강 강사님의 코드 스타일을 따라가게 되었고 무의식적으로 그렇게 코딩을 했었다. \n면접관님이 코딩스타일은 다 다르지만 내가 사용한 코딩스타일은 값과 코드를 확인하기 위해 여러군데를 살펴봐야 하기때문에 본인은 선호하는 방식이 아니…","html":"<p>최근 면접을 보면서 나의 코딩 스타일에 대해 생각하게 되었다. <br>\n나는 많은 인강을 보면서 react를 독학한 케이스인데 아무래도 인강 강사님의 코드 스타일을 따라가게 되었고 무의식적으로 그렇게 코딩을 했었다. <br>\n면접관님이 코딩스타일은 다 다르지만 내가 사용한 코딩스타일은 값과 코드를 확인하기 위해 여러군데를 살펴봐야 하기때문에 본인은 선호하는 방식이 아니라고 하셨다. (솔직히 생각해본적이 없어서 충격 😱) <br></p>\n<p>신규 서비스를 개발하는 경우도 있지만 대부분의 개발은 기존코드를 유지보수 하는 경우가 많다. 이전 개발자가 코딩했던 스타일이 지극히 개인적이라면 어떻겠는가? 또는 동료 개발자가 내 스타일데로 코딩한 코드를 이해하지 못한다면? 개발자들은 자신이 코딩했던 코드도 까먹는 경우가 꽤 많다. 저 당시에 내가 왜 저렇게 코딩 했지?하는 경우를 많이 봤기 때문에 더더욱 개발자들 사이의 규칙이 중요한 것 같다. <br>\n현업에서 혼자 개발하는 개발자는 드물다. 그렇기 때문에 협업을 위한 코딩 스타일 규칙은 중요하다는 생각이 들었다.</p>\n<h2>코딩 컨벤션이란?</h2>\n<p>코딩 컨벤션은 협업 시 유지보수 및 가독성, 코드 이해를 위해 지켜지는 개발자들 사이의 규칙이다.\n효율적이고 관리하기 쉬운 코드를 만들기 위해(유지보수) 효율적으로 규칙을 정해야 한다.</p>\n<p><strong>*사용하는 이유?</strong></p>\n<ol>\n<li><strong>의미있는 코드</strong> : 웹표준과 접근성, 크로스 브라우징 등에 맞춘 의미있는 코드</li>\n<li><strong>유지보수가 용이한 코드</strong> : 시간과 비용 절약을 위해 타인이 봤을때도 금방 이해하고 수정하기 쉽게끔 작성</li>\n<li><strong>일관된 코드</strong> : 모든 개발자가 각자의 규칙을 가지고 있기때문에 하나의 규칙을 정해 일관된 코드로 작성</li>\n</ol>\n<h2>react 코딩컨벤션</h2>\n<h3>1. NAMING CONVENTIONS</h3>\n<ol>\n<li>\n<p>components 이름은 <code class=\"language-text\">Pascal case</code>로 작성해라. <br>\npascal case : 첫 단어를 대문자로 시작하는 표기법</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">Header.js Footer.jsx MainBanner.js BlogList.jsx</code></pre></div>\n</li>\n<li>\n<p>Non-components 이름은 <code class=\"language-text\">Camel case</code>로 작성해라. <br>\nCamel case : 띄어쓰기 대신 대문자로 단어를 구분하는 표기 방식</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">myUtilityFile.js cookieHelper.js fetchApi.js</code></pre></div>\n</li>\n<li>\n<p>Unit test 파일명은 대상 파일명과 동일하게 작성해라. <br></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">MainBanner.js MainBanner.test.js BlogList.js BlogList.test.js</code></pre></div>\n</li>\n<li>\n<p>속성명은 <code class=\"language-text\">Camel case</code>로 작성해라. <br></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">className\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\nonClick, onSubmit\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onClick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onSubmit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>inline 스타일은 <code class=\"language-text\">Camel case</code>로 작성해라.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1rem\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontWeight</span><span class=\"token operator\">:</span> <span class=\"token string\">\"700\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n</li>\n</ol>\n<h3>2. BUG AVOIDANCE</h3>\n<ol>\n<li>\n<p><code class=\"language-text\">null</code> 또는 <code class=\"language-text\">undefined</code>일 수 있는 값은 optional chaining 연산자 (?.)를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">obj<span class=\"token operator\">?.</span>prop\nobj<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span>expr<span class=\"token punctuation\">]</span>\narr<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\nfunc<span class=\"token operator\">?.</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>전달된 매개변수가 유효한지 확인하기 위해 guard pattern/<a href=\"https://www.jondjones.com/frontend/react/react-tutorials/how-to-config-typescript-within-a-react-app/\" target=\"_blank\">prop types</a>/<a href=\"https://www.jondjones.com/frontend/react/react-tutorials/how-to-config-typescript-within-a-react-app/\" target=\"_blank\">typescript</a>를 사용한다. <br></li>\n<li>side-effects를 피하기 위해 외부 데이터를 props로 받아서 사용한다.</li>\n<li>console.log()를 모두 지운다.</li>\n<li>props는 읽기 전용으로 사용하며, 직접 수정하지 않는다.</li>\n</ol>\n<h3>3. ARCHITECTURE &#x26; CLEAN CODE</h3>\n<ol>\n<li>유틸리티 파일을 만들어 중복된 코드를 피한다.</li>\n<li>Presentational 컴포넌트와 Container 컴포넌트를 분리하여 사용한다. <a href=\"https://jeffgukang.github.io/react-native-tutorial/docs/state-tutorial/redux-tutorial/04-container-and-presentational/container-and-presentational-kr.html\" target=\"_blank\">Container 컴포넌트와 Presentational 컴포넌트</a></li>\n<li>고차 컴포넌트(Higher Order Components, HOC)는 적절하게 사용한다.</li>\n<li>JS, test, css로 파일을 분리한다.</li>\n<li>반복되어 import되는 이름을 줄이기 위해 각 폴더에 index.js 파일을 만든다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Nav <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Nav.js\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CookieBanner <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./CookieBanner.js\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> Nav<span class=\"token punctuation\">,</span> CookieBanner <span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"6\">\n<li>하나의 파일에 하나의 React component만 만든다.</li>\n<li>가능하다면 컴포넌트 안에서 함수를 생성하지 않는다.</li>\n<li>부모 컴포넌트가 아닌 다른 컴포넌트의 함수를 사용하지 않는다. (의존성 역전을 피한다.)</li>\n<li>불필요한 주석을 사용하지 않는다.</li>\n<li>현재 화면보다 긴 코드는 더 작은 단위의 코드로 리팩토링 한다.</li>\n<li>주석 처리된 코드는 커밋하지 말고 삭제한다.</li>\n</ol>\n<h3>4. ES6</h3>\n<ol>\n<li>spread 연산자를 사용한다.</li>\n<li>구조 분해 할당을 사용한다.</li>\n<li>let과 const만 사용한다. (var 사용금지)</li>\n<li>되도록 화살표 함수를 사용한다.</li>\n<li>직접 null을 체크하기 보다 optional chaining 연산자 (?.)를 사용한다.</li>\n</ol>\n<h3>5. TESTING</h3>\n<ol>\n<li>테스트를 작성한다.</li>\n<li>적정 수준의 테스트 커버리지를 유지한다.</li>\n<li>하나의 테스트 파일에서 하나만 테스트 한다.</li>\n<li>테스트 코드안에서 로직을 사용하지 않는다.</li>\n<li>테스트 클래슽는 하나의 클래스만 테스트 한다.</li>\n<li>네트워크, 데이터 베이스와 직접 통신하지말고 가짜 함수를 사용한다.</li>\n</ol>\n<h3>6. CSS</h3>\n<ol>\n<li>inline css를 사용하지 않는다.</li>\n<li>명명 규칙을 지킨다. (네이밍 컨벤션 - bem, SUIT 등)</li>\n</ol>\n<p><small class=\"from add\">참고 : <a href=\"https://www.jondjones.com/frontend/react/react-tutorials/react-coding-standards-and-practices-to-level-up-your-code/\" tearget=\"_blank\">https://www.jondjones.com/frontend/react/react-tutorials/react-coding-standards-and-practices-to-level-up-your-code/</a><br>\n<a href=\"https://3-stack.tistory.com/53\" tearget=\"_blank\">https://3-stack.tistory.com/53</a>\n</small></p>","frontmatter":{"title":"[react] react 코딩 컨벤션","date":"April 05, 2022","update":null,"tags":["react"],"series":null},"fields":{"slug":"/2022-04-05-react/","readingTime":{"minutes":6.855}}},"seriesList":{"edges":[{"node":{"id":"85f01aa5-eee3-575e-811d-813ae4014d8c","fields":{"slug":"/2021-09-21-vue-clap-button/"},"frontmatter":{"title":"[vue] 박수치기 버튼 만들기 (vue clap button)"}}},{"node":{"id":"e17c2c8d-3ac3-52c8-b833-f0f63fb145ca","fields":{"slug":"/2021-09-21-sematic-tag/"},"frontmatter":{"title":"[html] Semantic Tag Layout (시맨틱 태그)"}}},{"node":{"id":"e9406318-7870-53b8-be0d-0628d5f16c6e","fields":{"slug":"/2021-09-21-javascript-object/"},"frontmatter":{"title":"[javascript] 객체 수정 제어 : preventExtensions(), seal(), freeze()"}}},{"node":{"id":"cba7b4a8-a8ea-5b52-8dd2-a248e4608e02","fields":{"slug":"/2021-09-21-rwd-awd/"},"frontmatter":{"title":"[web] 반응형(RWD)웹과 적응형(AWD)웹"}}},{"node":{"id":"121d2f8c-b8bd-5859-adb4-d552da584a31","fields":{"slug":"/2021-09-21-react-modal/"},"frontmatter":{"title":"[react] 모달 팝업창 만들기 (react modal)"}}},{"node":{"id":"157b47fb-9294-57ef-9771-7d7a2821fbf4","fields":{"slug":"/2021-09-21-function-prototype/"},"frontmatter":{"title":"[javascript] 함수의 call, apply, bind 메서드"}}},{"node":{"id":"10ab8846-cab6-5f3b-8284-505b13f7084a","fields":{"slug":"/2021-09-21-scroll/"},"frontmatter":{"title":"[html] 특정 영역으로 스크롤 이동 - 앵커기능(anchor) vs data 속성"}}},{"node":{"id":"4b5dea8f-4444-5637-9830-c3c989400402","fields":{"slug":"/2021-09-21-object/"},"frontmatter":{"title":"[javascript] Object.assign() & Object.create()"}}},{"node":{"id":"88fb7276-7d08-5a9a-ba95-c65bdef391c6","fields":{"slug":"/2021-09-21-scope/"},"frontmatter":{"title":"[javascript] execution context, scope (실행 컨텍스트, 스코프)"}}},{"node":{"id":"50a8a0a9-8dd3-57a0-948c-9212fb004fb3","fields":{"slug":"/2021-09-21-hoisting/"},"frontmatter":{"title":"[javascript] hoisting (호이스팅)"}}},{"node":{"id":"ec875953-377a-5ada-8b87-c272e65f12a1","fields":{"slug":"/2021-09-21-closure/"},"frontmatter":{"title":"[javascript] closure (클로저)"}}},{"node":{"id":"06cddb64-6db7-508a-8cb5-1564e438ebb7","fields":{"slug":"/2021-10-26-gaysby/"},"frontmatter":{"title":"[gatsby] Google Search Console과 Analytics 추가하기"}}},{"node":{"id":"e6286486-8ec3-5662-b1cf-895996e89851","fields":{"slug":"/2021-10-27-react-firebase/"},"frontmatter":{"title":"[react] firebase 프로젝트 배포하기"}}},{"node":{"id":"2d4fc9ca-ba49-574a-bfe3-3606aa0d4331","fields":{"slug":"/2021-10-30-var-let-const/"},"frontmatter":{"title":"[javascript] var, let, const"}}},{"node":{"id":"4d966f89-a26f-5410-a2fa-a41551cd718e","fields":{"slug":"/2021-11-09-algorithm/"},"frontmatter":{"title":"[algorithm] 약수, 소수, 최대공약수, 최소공배수"}}},{"node":{"id":"4c707311-c079-57e1-a572-98f3aa7ae231","fields":{"slug":"/2021-11-25-mui-react/"},"frontmatter":{"title":"[react] Material ui 템플릿 (Mui) 으로 회원가입 페이지 만들기 "}}},{"node":{"id":"0ab0d3c0-07e9-503d-ac43-54d9254180e5","fields":{"slug":"/2021-11-28-algorithm/"},"frontmatter":{"title":"[algorithm] LeetCode 139. Word Break "}}},{"node":{"id":"6dcf61f9-9ed6-5cfb-8947-f87bac931416","fields":{"slug":"/2021-12-02-bigO/"},"frontmatter":{"title":"[algorithm] 자바스크립트 빅오 표기법 (Big-O)"}}},{"node":{"id":"45389ff3-dff3-51b6-ab97-2eaa99c99dc4","fields":{"slug":"/2021-12-07-sorting-algorithm/"},"frontmatter":{"title":"[algorithm] 정렬 알고리즘 - 버블, 삽입, 선택, 병합, 퀵"}}},{"node":{"id":"f1ac0cd5-4c87-5edd-9702-ad95516ccd7d","fields":{"slug":"/2021-12-12-gaysby/"},"frontmatter":{"title":"[gatsby] gaysby로 TIL만들기"}}},{"node":{"id":"0b9239b9-8a3f-5bce-b733-412718adc20b","fields":{"slug":"/2021-12-14-codility/"},"frontmatter":{"title":"[algorithm] Codility Lesson 4. MissingInteger"}}},{"node":{"id":"3bc11fc9-8a50-5b56-ac54-8c89973dae82","fields":{"slug":"/2021-12-22-react-redux-persist/"},"frontmatter":{"title":"[react] react프로젝트에 redux-persist 적용하기"}}},{"node":{"id":"1c11f636-4486-5cb5-9bd0-e4ac4e3a1f03","fields":{"slug":"/2022-01-02-aws/"},"frontmatter":{"title":"[aws] PuTTY로 윈도우에서 aws ec2 ssh 접속하기"}}},{"node":{"id":"623c8fce-4a4c-58e9-82c3-932272112732","fields":{"slug":"/2022-01-27-styled-components/"},"frontmatter":{"title":"[react] styled-components 반응형 스타일 설정하기"}}},{"node":{"id":"c3bd1f2b-9d76-5f6b-af23-328ede9408e0","fields":{"slug":"/2022-02-06-scss-for/"},"frontmatter":{"title":"[scss] @for ~ through / to 차이점"}}},{"node":{"id":"f4995c24-f2de-5b69-9eb4-b6d86b64e1cf","fields":{"slug":"/2022-02-18-react/"},"frontmatter":{"title":"[react] CRA없이 React환경 구축하기 (웹팩, 바벨)"}}},{"node":{"id":"7e733056-9768-5753-9b29-0d34cc3320dc","fields":{"slug":"/2022-03-03-react-modal/"},"frontmatter":{"title":"[react] transition이 적용된 Modal 만들기"}}},{"node":{"id":"3f792d2c-3143-561e-9a78-cbf812f2d06c","fields":{"slug":"/2022-04-05-react/"},"frontmatter":{"title":"[react] react 코딩 컨벤션"}}},{"node":{"id":"d85197d6-d2e1-5420-b0dc-493facfb091a","fields":{"slug":"/2022-03-09/"},"frontmatter":{"title":"[diary] 프론트엔드 신입 면접 준비하기"}}},{"node":{"id":"8b9e8572-327f-5494-a9db-f0680b8d0458","fields":{"slug":"/2022-04-25-git-basic/"},"frontmatter":{"title":"[git] git 기본 사용법"}}},{"node":{"id":"90793e50-0e7d-523b-a01a-edd3233d3daa","fields":{"slug":"/2022-04-25-browsers-repository/"},"frontmatter":{"title":"[web] Storage vs Cookie"}}},{"node":{"id":"bfc8fa0a-6428-5a7f-ae78-1264c36e56d9","fields":{"slug":"/2022-04-25-virtual-dom/"},"frontmatter":{"title":"[react] Virtual Dom (가상 돔)"}}},{"node":{"id":"b6e54fa8-a7d3-584a-9ecf-288d4447f853","fields":{"slug":"/2022-04-25-redux-saga/"},"frontmatter":{"title":"[redux] Redux Saga"}}},{"node":{"id":"2a064548-9f02-5961-b1fd-ddd288759867","fields":{"slug":"/2022-04-25-hooks/"},"frontmatter":{"title":"[react] React Hooks (리액트 훅스)"}}},{"node":{"id":"d9910675-d365-5284-9c30-93a93a2d5fcc","fields":{"slug":"/2022-04-25-async-await/"},"frontmatter":{"title":"[javascript] Async await"}}},{"node":{"id":"96dd1868-430e-5558-a4ae-4707f19eec2c","fields":{"slug":"/2022-04-25-promise/"},"frontmatter":{"title":"[javascript] Promise"}}},{"node":{"id":"12f3c640-b2cd-5cdb-8a6c-8bfe16c4cf87","fields":{"slug":"/2022-04-25-js-runtime/"},"frontmatter":{"title":"[javascript] 자바스크립트 런타임"}}},{"node":{"id":"0481546f-7543-5f1f-af9b-f0ef107366ba","fields":{"slug":"/2022-04-25-throttle-debounce/"},"frontmatter":{"title":"[javascript] throttling과 debouncing"}}},{"node":{"id":"b8f5a7d8-6e73-5cce-a287-a8bd97d590ad","fields":{"slug":"/2022-04-25-url-web/"},"frontmatter":{"title":"[web] 브라우저에 URL을 입력했을 때 발생하는 일들"}}},{"node":{"id":"e3ddc21a-e1b0-56fb-9424-a26a63d3b3fa","fields":{"slug":"/2022-06-12/"},"frontmatter":{"title":"[diary] 성장하는 개발자"}}},{"node":{"id":"a40425b1-a608-5090-b224-4ef330e67298","fields":{"slug":"/2022-08-06-react-query/"},"frontmatter":{"title":"[react] React Query 기초"}}},{"node":{"id":"3cb97112-9e20-5bc8-8938-f2900a32150b","fields":{"slug":"/2022-08-15-recoil/"},"frontmatter":{"title":"[react] Recoil 상태관리 라이브러리"}}},{"node":{"id":"e40f337e-6ce7-571b-a183-087cceb67d25","fields":{"slug":"/2022-11-06-nextjs-13/"},"frontmatter":{"title":"[nextjs] Next.js 13"}}},{"node":{"id":"6df23f2e-58a7-5423-b212-4298c7019cbc","fields":{"slug":"/2023-01-08/"},"frontmatter":{"title":"[diary] 2022년 회고"}}},{"node":{"id":"dc6e27bc-c609-56f6-86d8-97bfeb346561","fields":{"slug":"/2023-01-23-array-to-object/"},"frontmatter":{"title":"[javascript] 배열에서 특정값을 선택해서 객체로 변환하기 (배열을 객체로)"}}},{"node":{"id":"82f7d2e8-2e89-5fe9-94df-4178ad8a5b6a","fields":{"slug":"/2023-03-03-git/"},"frontmatter":{"title":"[git] 실무에서 사용했던 git 정리"}}},{"node":{"id":"fb314803-d9a2-50e6-a24e-0b31d76c1c03","fields":{"slug":"/2023-08-15-vercel-node-version-update/"},"frontmatter":{"title":"[nextjs] nextjs node버전 업데이트 여정 (tailwind custom class error)"}}}]},"previous":{"fields":{"slug":"/2022-03-03-react-modal/"},"frontmatter":{"title":"[react] transition이 적용된 Modal 만들기"}},"next":{"fields":{"slug":"/2022-03-09/"},"frontmatter":{"title":"[diary] 프론트엔드 신입 면접 준비하기"}}},"pageContext":{"id":"3f792d2c-3143-561e-9a78-cbf812f2d06c","series":null,"previousPostId":"7e733056-9768-5753-9b29-0d34cc3320dc","nextPostId":"d85197d6-d2e1-5420-b0dc-493facfb091a"}},"staticQueryHashes":[],"slicesMap":{}}