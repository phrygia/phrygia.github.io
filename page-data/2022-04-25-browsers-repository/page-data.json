{"componentChunkName":"component---src-templates-post-jsx","path":"/2022-04-25-browsers-repository/","result":{"data":{"site":{"siteMetadata":{"title":"phrygia dev.log"}},"markdownRemark":{"id":"90793e50-0e7d-523b-a01a-edd3233d3daa","excerpt":"브라우저 저장소 (Web Storage) 웹의 데이터를 클라이언트에 저장할 수 있는 자료구조다.\nHTML5에서는 웹 사이트의 데이터를 클라이언트에 저장할 수 있는 새로운 자료구조인 Web Storage 스펙이 포함되어있다.\n 쌍으로 데이터를 저장하고 를 기반으로 데이터를 조회하는 패턴이다. \n내부적으로는 영구저장소(LocalStorage)와 임시저장소(S…","html":"<h2>브라우저 저장소 (Web Storage)</h2>\n<p>웹의 <u>데이터를 클라이언트에 저장할 수 있는</u> 자료구조다.\nHTML5에서는 웹 사이트의 데이터를 클라이언트에 저장할 수 있는 새로운 자료구조인 Web Storage 스펙이 포함되어있다.<br>\n<code class=\"language-text\">key:value</code> 쌍으로 데이터를 저장하고 <code class=\"language-text\">key</code>를 기반으로 데이터를 조회하는 패턴이다. <br>\n내부적으로는 영구저장소(LocalStorage)와 임시저장소(SessionStorage)가 분리되어 데이터 지속성에 따라 구분할 수 있어 응용 환경에 맞는 선택이 가능하다. <br>\nWeb Storage는 Local Storage와 Session Storage 두 가지 방식이 있다.</p>\n<h3>Web Storage의 특징</h3>\n<ol>\n<li>서버 전송이 없다 : 데이터를 서버로 전송하지 않기 때문에 트래픽 비용을 아낄 수 있다.</li>\n<li>브라우저별 용량제한이 다르다.</li>\n<li>영구적으로 저장이 가능하다 : 만료기간 없이 영구적으로 데이터를 저장할 수도 있다.<br>\n(Local Storage = 만료기한 없음, Session Storage = 세션 종료 시 만료)</li>\n<li>키와 값은 문자열로 변환되어 저장된다.</li>\n<li>쿠키 보다 보안이 우수하며 많은 정보를 담을 수 있다.</li>\n<li>장점 : 서버에 불필요한 데이터를 저장을 안 하고, 저장할 수 있는 용량이 크다.</li>\n<li>단점 : HTML5를 지원되는 브라우저에서 사용이 가능하다.</li>\n</ol>\n<h3>1. 로컬 스토리지 (Local Storage)</h3>\n<ul>\n<li>저장한 데이터 영구적으로 보관가능 (브라우저 종료하더라도 데이터가 남아있다.)</li>\n<li>도메인 마다 별도로 localStorage가 생성된다.</li>\n<li>Windows 전역 객체의 LocalStorage라는 컬렉션을 통해 저장/조회가 이루어 진다.</li>\n<li>Session Storage와 Cookie에 비해 저장 공간이 크다. (최대 5MB까지)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// localStorage 저장</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"XXXXXXXX\"</span><span class=\"token punctuation\">)</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringfy</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// localStorage 조회</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// localStorage 설정된 키로 삭제</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// localStorage 전체 삭제</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>2. 세션 스토리지 (Session Storage)</h3>\n<ul>\n<li>데이터가 지속적으로 보관되지 않는다. 현재 페이지가 브라우징 되고 있는 브라우저 컨텍스트 내에서만 데이터가 유지된다. <br>\n(브라우저가 종료되면 데이터도 같이 지워진다.)</li>\n<li>Windows 전역 객체의 sessionStorage 컬렉션을 통해 저장/조회가 이루어진다.</li>\n<li>도메인별로 생성된다.<br>\n(브라우저 컨텍스트가 다르기 때문 같은 도메인/사이트라 하더라도 브라우저가 다르면 서로 다른 영역이된다.)</li>\n<li>브라우저를 하나 더 실행해서 동일한 페이지를 열었을 때, 두페이지의 sessionStorage는 별개의 영역으로 서로 침범하지 못한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// sessionStorage 저장</span>\nsessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"XXXXXXXX\"</span><span class=\"token punctuation\">)</span>\nsessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringfy</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// sessionStorage 조회</span>\nsessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// sessionStorage 설정된 키로 삭제</span>\nsessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// sessionStorage 전체 삭제</span>\nsessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Cookie</h2>\n<ul>\n<li>쿠키를 설정하면 쿠키 정보를 포함하여 서버로 보내진다. <br>\n쿠키에 사용자의 정보를 담아서 서버로 전송하면 서버에서 사용자를 확인할 수 있다. 서버와 클라이언트 간의 지속적인 데이터 교환을 위해 만들어 졌기 때문에 서버로 계속 전송된다.</li>\n<li>서버에서 데이터 만료일을 설정하고 관리한다.</li>\n<li>4KB 이하의 아주 작은 데이터를 보관한다.</li>\n<li>클라이언트에서 읽을 수 있지만, 보통 서버 사이드에서 읽는 데이터 이다.</li>\n<li>클라이언트에서 쿠키 접급을 방지할 수 있다. (httpOnly= true)</li>\n<li>종류 : persistent cookies, session cookies</li>\n<li>persistent cookies: 브라우저나 탭이 열려있는 동안에만 저장되며 만료일이 포함되지 않는다 - ex) 은행의 자격 증명 등</li>\n<li>session cookies: 만료일까지 사용자의 브라우저에 저장되고 만료일이 지나면 삭제된다 - ex) 사용자의 행동 기록 등</li>\n</ul>\n<p><strong>*cookie property</strong></p>\n<table class=\"ph_tbl\">\n  <tr>\n    <th>property</th>\n    <th>설명</th>\n  </tr>\n  <tr>\n    <td>name=</td>\n    <td>쿠키의 이름과 값을 설정</td>\n  </tr>\n  <tr>\n    <td>expires= </td>\n    <td>쿠키가 만료일 설정 (expires 값이 없으면 브라우저를 닫을때 소멸)</td>\n  </tr>\n  <tr>\n    <td>path=</td>\n    <td>쿠키가 적용될 사이트의 패스를 지정하고자 하는 경우 사용</td>\n  </tr>\n  <tr>\n    <td>domain= </td>\n    <td>쿠키를 사용할 도메인을 지정</td>\n  </tr>\n  <tr>\n    <td>httpOnly</td>\n    <td>자바스크립트에서 쿠키에 접근할 수 없다.</td>\n  </tr>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 쿠키 생성하기</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setCookie</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> expiredays</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> today <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  today<span class=\"token punctuation\">.</span><span class=\"token function\">setDate</span><span class=\"token punctuation\">(</span>today<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> expiredays<span class=\"token punctuation\">)</span>\n  document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span>\n    value\n  <span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">; path=/; expires=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>today<span class=\"token punctuation\">.</span><span class=\"token function\">toGMTString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 쿠키 조회하기</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCookie</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">const</span> cookie <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\";\"</span><span class=\"token punctuation\">)</span>\n  cookie<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> dic <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">===</span> dic<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> dic<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"쿠키생성\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"여기는 내용\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 만료일 : 1일</span>\n<span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"쿠키생성\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Web Storage vs Cookie</h2>\n<table class=\"ph_tbl\">\n  <tr>\n    <th></th>\n    <th>Local Storage</th>\n    <th>Session Storage</th>\n    <th>Cookie</th>\n  </tr>\n  <tr>\n    <th>저장 위치</th>\n    <td>클라이언트에 존재 (서버 전송 X)</td>\n    <td>클라이언트에 존재 (서버 전송 X)</td>\n    <td>매번 서버로 전송되어 서버에 저장</td>\n  </tr>\n  <tr>\n    <th>데이터 유지 측면</th>\n    <td>영구보관</td>\n    <td>브라우저 종료시 삭제됨</td>\n    <td>반영구 (만료일 설정)</td>\n  </tr>\n  <tr>\n    <th>데이터 범위 측면</th>\n    <td>도메인만 같으면 전역적으로 공유 가능</td>\n    <td>도메인별로 별도로 생성 (공유 x)</td>\n    <td></td>\n  </tr>\n  <tr>\n    <th>지원</th>\n    <td>html5 지원 브라우저</td>\n    <td>html5 지원 브라우저</td>\n    <td>대부분의 브라우저 지원</td>\n  </tr>\n  <tr>\n    <th>용량</th>\n    <td>5MB</td>\n    <td>5MB</td>\n    <td>최대 쿠키 수: 20개, 최대쿠키 크기: 4KB</td>\n  </tr>\n  <tr>\n    <th>추천 상황</th>\n    <td>자동 로그인, 다크/라이트 모드</td>\n    <td>입력 폼 정보, 비로그인 장바구니, 페이지 이동 시 스크롤 위치 값</td>\n    <td>팝업 창</td>\n  </tr>\n</table>","frontmatter":{"title":"[web] Storage vs Cookie","date":"April 25, 2022","update":null,"tags":["web"],"series":null},"fields":{"slug":"/2022-04-25-browsers-repository/","readingTime":{"minutes":7.565}}},"seriesList":{"edges":[{"node":{"id":"85f01aa5-eee3-575e-811d-813ae4014d8c","fields":{"slug":"/2021-09-21-vue-clap-button/"},"frontmatter":{"title":"[vue] 박수치기 버튼 만들기 (vue clap button)"}}},{"node":{"id":"e17c2c8d-3ac3-52c8-b833-f0f63fb145ca","fields":{"slug":"/2021-09-21-sematic-tag/"},"frontmatter":{"title":"[html] Semantic Tag Layout (시맨틱 태그)"}}},{"node":{"id":"e9406318-7870-53b8-be0d-0628d5f16c6e","fields":{"slug":"/2021-09-21-javascript-object/"},"frontmatter":{"title":"[javascript] 객체 수정 제어 : preventExtensions(), seal(), freeze()"}}},{"node":{"id":"cba7b4a8-a8ea-5b52-8dd2-a248e4608e02","fields":{"slug":"/2021-09-21-rwd-awd/"},"frontmatter":{"title":"[web] 반응형(RWD)웹과 적응형(AWD)웹"}}},{"node":{"id":"121d2f8c-b8bd-5859-adb4-d552da584a31","fields":{"slug":"/2021-09-21-react-modal/"},"frontmatter":{"title":"[react] 모달 팝업창 만들기 (react modal)"}}},{"node":{"id":"157b47fb-9294-57ef-9771-7d7a2821fbf4","fields":{"slug":"/2021-09-21-function-prototype/"},"frontmatter":{"title":"[javascript] 함수의 call, apply, bind 메서드"}}},{"node":{"id":"10ab8846-cab6-5f3b-8284-505b13f7084a","fields":{"slug":"/2021-09-21-scroll/"},"frontmatter":{"title":"[html] 특정 영역으로 스크롤 이동 - 앵커기능(anchor) vs data 속성"}}},{"node":{"id":"4b5dea8f-4444-5637-9830-c3c989400402","fields":{"slug":"/2021-09-21-object/"},"frontmatter":{"title":"[javascript] Object.assign() & Object.create()"}}},{"node":{"id":"88fb7276-7d08-5a9a-ba95-c65bdef391c6","fields":{"slug":"/2021-09-21-scope/"},"frontmatter":{"title":"[javascript] execution context, scope (실행 컨텍스트, 스코프)"}}},{"node":{"id":"50a8a0a9-8dd3-57a0-948c-9212fb004fb3","fields":{"slug":"/2021-09-21-hoisting/"},"frontmatter":{"title":"[javascript] hoisting (호이스팅)"}}},{"node":{"id":"ec875953-377a-5ada-8b87-c272e65f12a1","fields":{"slug":"/2021-09-21-closure/"},"frontmatter":{"title":"[javascript] closure (클로저)"}}},{"node":{"id":"06cddb64-6db7-508a-8cb5-1564e438ebb7","fields":{"slug":"/2021-10-26-gaysby/"},"frontmatter":{"title":"[gatsby] Google Search Console과 Analytics 추가하기"}}},{"node":{"id":"e6286486-8ec3-5662-b1cf-895996e89851","fields":{"slug":"/2021-10-27-react-firebase/"},"frontmatter":{"title":"[react] firebase 프로젝트 배포하기"}}},{"node":{"id":"2d4fc9ca-ba49-574a-bfe3-3606aa0d4331","fields":{"slug":"/2021-10-30-var-let-const/"},"frontmatter":{"title":"[javascript] var, let, const"}}},{"node":{"id":"4d966f89-a26f-5410-a2fa-a41551cd718e","fields":{"slug":"/2021-11-09-algorithm/"},"frontmatter":{"title":"[algorithm] 약수, 소수, 최대공약수, 최소공배수"}}},{"node":{"id":"4c707311-c079-57e1-a572-98f3aa7ae231","fields":{"slug":"/2021-11-25-mui-react/"},"frontmatter":{"title":"[react] Material ui 템플릿 (Mui) 으로 회원가입 페이지 만들기 "}}},{"node":{"id":"0ab0d3c0-07e9-503d-ac43-54d9254180e5","fields":{"slug":"/2021-11-28-algorithm/"},"frontmatter":{"title":"[algorithm] LeetCode 139. Word Break "}}},{"node":{"id":"6dcf61f9-9ed6-5cfb-8947-f87bac931416","fields":{"slug":"/2021-12-02-bigO/"},"frontmatter":{"title":"[algorithm] 자바스크립트 빅오 표기법 (Big-O)"}}},{"node":{"id":"45389ff3-dff3-51b6-ab97-2eaa99c99dc4","fields":{"slug":"/2021-12-07-sorting-algorithm/"},"frontmatter":{"title":"[algorithm] 정렬 알고리즘 - 버블, 삽입, 선택, 병합, 퀵"}}},{"node":{"id":"f1ac0cd5-4c87-5edd-9702-ad95516ccd7d","fields":{"slug":"/2021-12-12-gaysby/"},"frontmatter":{"title":"[gatsby] gaysby로 TIL만들기"}}},{"node":{"id":"0b9239b9-8a3f-5bce-b733-412718adc20b","fields":{"slug":"/2021-12-14-codility/"},"frontmatter":{"title":"[algorithm] Codility Lesson 4. MissingInteger"}}},{"node":{"id":"3bc11fc9-8a50-5b56-ac54-8c89973dae82","fields":{"slug":"/2021-12-22-react-redux-persist/"},"frontmatter":{"title":"[react] react프로젝트에 redux-persist 적용하기"}}},{"node":{"id":"1c11f636-4486-5cb5-9bd0-e4ac4e3a1f03","fields":{"slug":"/2022-01-02-aws/"},"frontmatter":{"title":"[aws] PuTTY로 윈도우에서 aws ec2 ssh 접속하기"}}},{"node":{"id":"623c8fce-4a4c-58e9-82c3-932272112732","fields":{"slug":"/2022-01-27-styled-components/"},"frontmatter":{"title":"[react] styled-components 반응형 스타일 설정하기"}}},{"node":{"id":"c3bd1f2b-9d76-5f6b-af23-328ede9408e0","fields":{"slug":"/2022-02-06-scss-for/"},"frontmatter":{"title":"[scss] @for ~ through / to 차이점"}}},{"node":{"id":"f4995c24-f2de-5b69-9eb4-b6d86b64e1cf","fields":{"slug":"/2022-02-18-react/"},"frontmatter":{"title":"[react] CRA없이 React환경 구축하기 (웹팩, 바벨)"}}},{"node":{"id":"7e733056-9768-5753-9b29-0d34cc3320dc","fields":{"slug":"/2022-03-03-react-modal/"},"frontmatter":{"title":"[react] transition이 적용된 Modal 만들기"}}},{"node":{"id":"3f792d2c-3143-561e-9a78-cbf812f2d06c","fields":{"slug":"/2022-04-05-react/"},"frontmatter":{"title":"[react] react 코딩 컨벤션"}}},{"node":{"id":"d85197d6-d2e1-5420-b0dc-493facfb091a","fields":{"slug":"/2022-03-09/"},"frontmatter":{"title":"[diary] 프론트엔드 신입 면접 준비하기"}}},{"node":{"id":"8b9e8572-327f-5494-a9db-f0680b8d0458","fields":{"slug":"/2022-04-25-git-basic/"},"frontmatter":{"title":"[git] git 기본 사용법"}}},{"node":{"id":"90793e50-0e7d-523b-a01a-edd3233d3daa","fields":{"slug":"/2022-04-25-browsers-repository/"},"frontmatter":{"title":"[web] Storage vs Cookie"}}},{"node":{"id":"b6e54fa8-a7d3-584a-9ecf-288d4447f853","fields":{"slug":"/2022-04-25-redux-saga/"},"frontmatter":{"title":"[redux] Redux Saga"}}},{"node":{"id":"2a064548-9f02-5961-b1fd-ddd288759867","fields":{"slug":"/2022-04-25-hooks/"},"frontmatter":{"title":"[react] React Hooks (리액트 훅스)"}}},{"node":{"id":"bfc8fa0a-6428-5a7f-ae78-1264c36e56d9","fields":{"slug":"/2022-04-25-virtual-dom/"},"frontmatter":{"title":"[react] Virtual Dom (가상 돔)"}}},{"node":{"id":"d9910675-d365-5284-9c30-93a93a2d5fcc","fields":{"slug":"/2022-04-25-async-await/"},"frontmatter":{"title":"[javascript] Async await"}}},{"node":{"id":"12f3c640-b2cd-5cdb-8a6c-8bfe16c4cf87","fields":{"slug":"/2022-04-25-js-runtime/"},"frontmatter":{"title":"[javascript] 자바스크립트 런타임"}}},{"node":{"id":"96dd1868-430e-5558-a4ae-4707f19eec2c","fields":{"slug":"/2022-04-25-promise/"},"frontmatter":{"title":"[javascript] Promise"}}},{"node":{"id":"0481546f-7543-5f1f-af9b-f0ef107366ba","fields":{"slug":"/2022-04-25-throttle-debounce/"},"frontmatter":{"title":"[javascript] throttling과 debouncing"}}},{"node":{"id":"b8f5a7d8-6e73-5cce-a287-a8bd97d590ad","fields":{"slug":"/2022-04-25-url-web/"},"frontmatter":{"title":"[web] 브라우저에 URL을 입력했을 때 발생하는 일들"}}},{"node":{"id":"e3ddc21a-e1b0-56fb-9424-a26a63d3b3fa","fields":{"slug":"/2022-06-12/"},"frontmatter":{"title":"[diary] 성장하는 개발자"}}},{"node":{"id":"a40425b1-a608-5090-b224-4ef330e67298","fields":{"slug":"/2022-08-06-react-query/"},"frontmatter":{"title":"[react] React Query 기초"}}},{"node":{"id":"3cb97112-9e20-5bc8-8938-f2900a32150b","fields":{"slug":"/2022-08-15-recoil/"},"frontmatter":{"title":"[react] Recoil 상태관리 라이브러리"}}},{"node":{"id":"e40f337e-6ce7-571b-a183-087cceb67d25","fields":{"slug":"/2022-11-06-nextjs-13/"},"frontmatter":{"title":"[nextjs] Next.js 13"}}},{"node":{"id":"6df23f2e-58a7-5423-b212-4298c7019cbc","fields":{"slug":"/2023-01-08/"},"frontmatter":{"title":"[diary] 2022년 회고"}}},{"node":{"id":"dc6e27bc-c609-56f6-86d8-97bfeb346561","fields":{"slug":"/2023-01-23-array-to-object/"},"frontmatter":{"title":"[javascript] 배열에서 특정값을 선택해서 객체로 변환하기 (배열을 객체로)"}}},{"node":{"id":"82f7d2e8-2e89-5fe9-94df-4178ad8a5b6a","fields":{"slug":"/2023-03-03-git/"},"frontmatter":{"title":"[git] 실무에서 사용했던 git 정리"}}},{"node":{"id":"fb314803-d9a2-50e6-a24e-0b31d76c1c03","fields":{"slug":"/2023-08-15-vercel-node-version-update/"},"frontmatter":{"title":"[nextjs] nextjs node버전 업데이트 여정 (tailwind custom class error)"}}}]},"previous":{"fields":{"slug":"/2022-04-25-git-basic/"},"frontmatter":{"title":"[git] git 기본 사용법"}},"next":{"fields":{"slug":"/2022-04-25-redux-saga/"},"frontmatter":{"title":"[redux] Redux Saga"}}},"pageContext":{"id":"90793e50-0e7d-523b-a01a-edd3233d3daa","series":null,"previousPostId":"8b9e8572-327f-5494-a9db-f0680b8d0458","nextPostId":"b6e54fa8-a7d3-584a-9ecf-288d4447f853"}},"staticQueryHashes":[],"slicesMap":{}}