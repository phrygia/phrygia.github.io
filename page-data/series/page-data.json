{"componentChunkName":"component---src-pages-series-jsx","path":"/series/","result":{"data":{"site":{"siteMetadata":{"title":"phrygia dev.log"}},"allMarkdownRemark":{"group":[{"fieldValue":"algorithm","totalCount":5},{"fieldValue":"diary","totalCount":3},{"fieldValue":"firebase","totalCount":1},{"fieldValue":"gatsby","totalCount":2},{"fieldValue":"git","totalCount":2},{"fieldValue":"html","totalCount":1},{"fieldValue":"javascript","totalCount":17},{"fieldValue":"nextjs","totalCount":2},{"fieldValue":"react","totalCount":14},{"fieldValue":"recoil","totalCount":1},{"fieldValue":"redux","totalCount":1},{"fieldValue":"scss","totalCount":1},{"fieldValue":"tailwind","totalCount":1},{"fieldValue":"vue","totalCount":1},{"fieldValue":"web","totalCount":6}],"nodes":[{"excerpt":"허겁지겁 코드를 작성하고 일정에 쫓겨 디자인을 따라하기에 급급해 성능따위 무시했던 신입 1년.. \n최근 개발에 많이 익숙해지면서 성능 및 최적화에 흥미가 생겼습니다. \n그중 제일 쉽게 사용할 수 있는게 구글에서 개발한 크롬 웹사이트 성능 측정 도구인 Lighthouse입니다.  Lighthouse는 크롬 개발자도구, 크롬익스텐션, npm 라이브러리(nod…","fields":{"slug":"/2023-11-19-light-house/"},"frontmatter":{"date":"November 19, 2023","update":"Nov 19, 2023","title":"[web] Lighthouse 웹페이지 성능분석 (Performance)","tags":["web"],"series":"프론트엔드 성능최적화 공부"}},{"excerpt":"Nextjs로 자사 브랜드를 2개 운영중인 회사의 프론트엔드 개발자로 일하고 있는 필자는 어느순간부터 vercel에 접속할때마다 이런 문구를 발견했다.\n \n\n2023년 8월 15일부터 새로운 빌드가 적용되지 않는다니😱😱 \n2개 프로젝트 모두 node 14로 되어있기 때문에 사수는 8월 15일 전까지만 적용하면 된다고 했다.. (그치만 아직 1년된 쪼렙이 …","fields":{"slug":"/2023-08-15-vercel-node-version-update/"},"frontmatter":{"date":"August 15, 2023","update":null,"title":"[nextjs] nextjs node버전 업데이트 여정 (tailwind custom class error)","tags":["nextjs","tailwind","react"],"series":null}},{"excerpt":"프론트엔드 개발자로 일한지 7개월정도가 되었다. 퍼블리셔로 오래 지내면서 git은 거의 사용해 본 적이 없었고 (아주 간단하게 사용) 사용하더라도 git GUI인 소스트리를 사용해 git 명령어를 거의 모르는 상태였다고 봐도 무방했다.\n물론 개발자로 이직 준비하면서 git에 대해 공부하긴 했었지만 혼자하는 공부는 한계가 있고 conflict나는 상황이 거…","fields":{"slug":"/2023-03-03-git/"},"frontmatter":{"date":"March 03, 2023","update":null,"title":"[git] 실무에서 사용했던 git 정리","tags":["git"],"series":null}},{"excerpt":"회사에서 개발하던 중 선택된 상품의 배열에서 각 상품의 와 를 추출해서 결제페이지로 넘겨주는 로직을 개발하고 있었다.  *api 값\n *api에서 추출하려는 값 우선 장바구니 상품들중 선택한 상품을 id로 필터하고 map으로 store_key키만 추출한 다음 reduce안에서 다시 filter해서 해당 상품의 수량을 붙여서 코딩을 했다..\n(진짜 부끄럽고…","fields":{"slug":"/2023-01-23-array-to-object/"},"frontmatter":{"date":"January 22, 2023","update":null,"title":"[javascript] 배열에서 특정값을 선택해서 객체로 변환하기 (배열을 객체로)","tags":["javascript"],"series":null}},{"excerpt":"인생에서 제일 길었던 한해가 지나갔다. 2022년. 다사다난했던 한해. 많은 일들이 있었던 만큼 매우 긴 한해였다.\n프론트엔드 개발자가 되겠다고 연초부터 면접을 보러 다녔었는데 아주 오래전 이야기가 된것 같은 느낌.. 길고도 험난했던 해인만큼 2022년 회고록을 쓰며 안좋았던 기억들을 모두 훌훌 털어내고 새로운 2023년을 준비해보려고 한다.\n2022년의…","fields":{"slug":"/2023-01-08/"},"frontmatter":{"date":"January 08, 2023","update":null,"title":"[diary] 2022년 회고","tags":["diary"],"series":null}},{"excerpt":"어느날 사수가 갑작스럽게 보내준 링크. (Next.js 13 신버전 발표회 요약 (웹개발자 비상!!))\n나는 프론트엔드 웹개발자로 React를 사용하고 있고 우리회사는 production에서 많이 사용되고 편리한 Next.js를 사용중이다. \n사실 사수가 저 링크를 보내주기 전까지 우리 회사가 무슨 버전을 쓰는지도 모르고 신경조차 쓰지 않았다. \n핑계를 …","fields":{"slug":"/2022-11-06-nextjs-13/"},"frontmatter":{"date":"November 06, 2022","update":null,"title":"[nextjs] Next.js 13","tags":["nextjs","react"],"series":null}},{"excerpt":"회사의 새로운 프로젝트에서 React query와 함께 Recoil을 써보고 싶다는 생각이 들었다. \n우리 회사는 전역적으로 관리할 상태들이 많지 않아 쉽게사용할 수 있는 Context API를 사용하고 있다. \n나는 React를 공부할때 Redux를 사용해봤기 때문에 Redux의 복잡한 코드가 너무 싫었다. 전역적으로 사용하기 위한 초기 세팅도 복잡하고…","fields":{"slug":"/2022-08-15-recoil/"},"frontmatter":{"date":"August 15, 2022","update":null,"title":"[react] Recoil 상태관리 라이브러리","tags":["react","recoil"],"series":null}},{"excerpt":"커머스 인하우스 신입 프론트엔드 개발자로 취업한지 2달정도 되었다. 현재 회사는 3개의 사이트를 가지고 있는데 1개만 자체솔루션이고 2개는 쇼핑몰 웹 솔루션을 사용하고 있다. 일반 솔루션을 사용하면 개발에 한정적이고 재고를 정확하게 관리하기 힘들기 때문에 하반기에 자체 솔루션 개발 계획이 있었다. 어쩌다보니 입사하고 3개월도 안되어 새롭게 구축하는 자체 …","fields":{"slug":"/2022-08-06-react-query/"},"frontmatter":{"date":"August 06, 2022","update":null,"title":"[react] React Query 기초","tags":["react"],"series":null}},{"excerpt":"나는 나이많은 비전공자 개발자이기 때문에 항상 어떻게 해야 더 빨리 더 효율적으로 좋은 개발자가 될 지 고민하고 있다. 개발자는 평생 공부해야 하는 직업이기 때문에 입사 전 월요일에는 뭐 공부하고 주말에는 뭐 공부하자라는 식으로 세세한 계획을 세웠었다. 현실은 출퇴근 여행자라 긴 출퇴근 시간에 완벽하게 적응하지 못했고 퇴근하면 4시간 정도후에 잠들어야 한…","fields":{"slug":"/2022-06-12/"},"frontmatter":{"date":"June 12, 2022","update":null,"title":"[diary] 성장하는 개발자","tags":["diary"],"series":null}},{"excerpt":"주소창에 URL을 입력하면, DNS 서버 검색 \n브라우저는 DNS(Domain Name System)를 운영하는 서버를 통해 서버의 실제 주소인 IP 주소를 요청한다. 매핑되는 IP 주소가 있다면 사용자가 입력한 URL 정보와 함께 전달한다. 브라우저는 IP 주소를 이용해서 서버에 요청을 보낸다. \n페이지 URL 정보와 전달받은 IP 주소는 HTTP 프로…","fields":{"slug":"/2022-04-25-url-web/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[web] 브라우저에 URL을 입력했을 때 발생하는 일들","tags":["web"],"series":null}},{"excerpt":"Redux의 미들웨어 라이브러리 중 한 개로 Redux-thunk, Redux-toolkit 등 다양한 라이브러리가 존재하지만 Redux-saga를 사용하는 기업이 많다. \nRedux-saga는 다른 라이브러리에 비해 더 복잡한 비동기 처리를 할 수 있다는 장점이 있다. \n단점은 러닝커브가 높고 제네레이터라는 문법에 익숙하지 않다면 어색하게 느껴 질 수 …","fields":{"slug":"/2022-04-25-redux-saga/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[redux] Redux Saga","tags":["redux"],"series":null}},{"excerpt":"Hooks란? 리액트 16.8 이전 버전에서는 function 컴포넌트에서는 상태(state)를 관리할 수가 없었다. 16.8 버전에서 Hooks 라는 기능이 도입되면서 function 컴포넌트에서도 상태를 관리할 수 있게 되었다. function 컴포넌트의 Hooks를 사용하면 class 컴포넌트에서만 사용할 수 있었던 라이프사이클을 사용할 수 있으며 …","fields":{"slug":"/2022-04-25-hooks/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[react] React Hooks (리액트 훅스)","tags":["react"],"series":null}},{"excerpt":"리액트를 사용하면서 virtual dom(VDOM)과 관련된 글을 많이 보게 되었다. \nvirtual dom, 직역하면' 가상의 dom'이란 뜻인데 의미만으론 정확한 개념을 알수가 없었다. \nVDOM엔 대해 알기위해서 팔요한 선행지식에 대해 알아보자 브라우저 workflow Virtual DOM을 사용하는 이유를 알기 위해서는 우리가 사용하는 브라우저가 …","fields":{"slug":"/2022-04-25-virtual-dom/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[react] Virtual Dom (가상 돔)","tags":["react"],"series":null}},{"excerpt":"async/await는 ES8에서 채택되었으며 제너레이터보다 간단하고 가독성 좋게 비동기 처리를 동기처럼 동작하도록 구현할 수 있다. \n프로미스를 기반으로 동작하며 프로미스의 then/catch/finally 후속 처리 메서드에 콜백 함수를 전달해서 비동기 처리 결과를 후속 처리할 필요 없이 마치 동기 처리처럼 프로미스가 처리 결과를 반환하도록 구현할 수…","fields":{"slug":"/2022-04-25-async-await/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[javascript] Async await","tags":["javascript"],"series":null}},{"excerpt":"자바스크립트는 비동기 처리를 위한 하나의 패턴으로 콜백 함수를 사용한다. 하지만 비동기에서 사용되던 콜백 패턴은 계속되는 콜백으로 인해 콜백 지옥(Callback Hell)에 빠질 확률이 높다. 콜백 지옥에 빠지면 코드의 가독성이 떨어지고 비동기 처리 중 발생한 에러를 처리하는데 많은 노력이 필요하며 여러 개의 비동기 처리를 한번에 처리하는 데도 한계가 …","fields":{"slug":"/2022-04-25-promise/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[javascript] Promise","tags":["javascript"],"series":null}},{"excerpt":"자바스크립트는 싱글 스레드로 한번에 한개의 작업만을 다룰 수 있는 동기식 언어이다. \n  *싱글 스레드 : 하나의 프로그램에서 하나의 코드만 실행할 수 있다는 뜻이다. 하나의 작업이 끝나야 다음 작업을 시작할 수 있다. 자바스크립트 런타임이란? 런타임이란 프로그래밍 언어가 구동되는 환경을 말한다. 자바스크립트 런타임은 자바스크립트가 구동되는 환경 종류 :…","fields":{"slug":"/2022-04-25-js-runtime/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[javascript] 자바스크립트 런타임","tags":["javascript"],"series":null}},{"excerpt":"scroll 이벤트를 사용하면 스크롤을 올리거나 내리는 짧은 시간동안 많은 이벤트가 발생한다. 복잡한 작업의 scroll 이벤트를 처리한다면 빈번하게 실행되는 이벤트 때문에 성능이 저하되고 렉이 걸릴 확률이 높아진다. \n이처럼 짧은 시간 간격으로 연속해서 발생하는 이벤트의 과도한 이벤트 핸들러 호출을 방지하기 위해 스로틀과 디바운스를 사용하면 성능향상에 …","fields":{"slug":"/2022-04-25-throttle-debounce/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[javascript] throttling과 debouncing","tags":["javascript"],"series":null}},{"excerpt":"브라우저 저장소 (Web Storage) 웹의 데이터를 클라이언트에 저장할 수 있는 자료구조다.\nHTML5에서는 웹 사이트의 데이터를 클라이언트에 저장할 수 있는 새로운 자료구조인 Web Storage 스펙이 포함되어있다.\n 쌍으로 데이터를 저장하고 를 기반으로 데이터를 조회하는 패턴이다. \n내부적으로는 영구저장소(LocalStorage)와 임시저장소(S…","fields":{"slug":"/2022-04-25-browsers-repository/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[web] Storage vs Cookie","tags":["web"],"series":null}},{"excerpt":"기본 명령어 브랜치 생성하여 작업하고 공통 브랜치에서 변경사항 다운받기 좋은 커밋 메시지를 작성하는 7가지 규칙 주제와 본문을 빈줄로 분리하기 주제는 50자로 제한하기 주제의 첫 글자는 대문자로 쓰기 주제에 마침표를 넣지 않기 주제는 명령으로 작성하기 본문은 72자에 줄바꿈하기 how 보단 what과 why를 설명하기 커밋 메시지의 구조 subject의 …","fields":{"slug":"/2022-04-25-git-basic/"},"frontmatter":{"date":"April 25, 2022","update":null,"title":"[git] git 기본 사용법","tags":["git"],"series":null}},{"excerpt":"2달동안의 구직활동을 마치고, 마침내 신입 프론트엔드 개발자로 합격했다. \n그동안 내가 많은 개발자분들의 블로그를 통해 도움을 받은 것 처럼, 내 글이 프론트엔드 개발자로 취업을 희망하는 신입개발자들에게 도움이 되길 바라는 마음으로 글을 썼다. 1월부터 신입 프론트엔드 개발자로 구직을 시작했다. \n하지만 며칠에 한번씩 한꺼번에 지원했었고, 본격적으로 구직…","fields":{"slug":"/2022-03-09/"},"frontmatter":{"date":"April 14, 2022","update":null,"title":"[diary] 프론트엔드 신입 면접 준비하기","tags":["diary"],"series":null}},{"excerpt":"최근 면접을 보면서 나의 코딩 스타일에 대해 생각하게 되었다. \n나는 많은 인강을 보면서 react를 독학한 케이스인데 아무래도 인강 강사님의 코드 스타일을 따라가게 되었고 무의식적으로 그렇게 코딩을 했었다. \n면접관님이 코딩스타일은 다 다르지만 내가 사용한 코딩스타일은 값과 코드를 확인하기 위해 여러군데를 살펴봐야 하기때문에 본인은 선호하는 방식이 아니…","fields":{"slug":"/2022-04-05-react/"},"frontmatter":{"date":"April 05, 2022","update":null,"title":"[react] react 코딩 컨벤션","tags":["react"],"series":null}},{"excerpt":"내 블로그에서 가장 조회수가 높은 포스팅은 react 모달 포스팅이다. ([react] 모달 팝업창 만들기) \n전에 만들었던 Modal은 트랜지션이 적용되지 않았었다. 최근 프로젝트를 만들면서 트랜지션이 적용된 Modal을 만들어야 했었기에 트랜지션이 적용된 react Modal을 만들어 보기로 했다. \n(* Modal은 이전에 만들었던 코드에 트랜지션을…","fields":{"slug":"/2022-03-03-react-modal/"},"frontmatter":{"date":"March 03, 2022","update":null,"title":"[react] transition이 적용된 Modal 만들기","tags":["react"],"series":null}},{"excerpt":"최근 구직활동을 시작하면서 사전과제를 받게 되었다. \n나의 포지션은 프론트엔드 개발자로 react 라이브러리를 사용하고 있기때문에 react로 자사 사이트 클론 코딩하고 api 요청에 대한 응답결과를 구현하는 과제였다. \n포트폴리오를 만들었을때는 CRA를 사용해서 리액트 프로젝트를 만들었었다. create-react-app 한줄만 입력하면 손쉽게 리액트 …","fields":{"slug":"/2022-02-18-react/"},"frontmatter":{"date":"February 18, 2022","update":null,"title":"[react] CRA없이 React환경 구축하기 (웹팩, 바벨)","tags":["react"],"series":null}},{"excerpt":"scss의 @for를 이용하면 반복적인 구문을 쉽게 처리할 수있다. \n인강에선 @for ~ through로 설명을 했는데 vs코드의 자동완성 코드는 @for ~ to였다. \n어떤 차이점이 있는걸까? @for 기본 사용법  $var : 변수명 \n<start> : 시작하는 숫자와 \n<end> : 끝나는 숫자 for ~ through end로 지장한 숫자까지 …","fields":{"slug":"/2022-02-06-scss-for/"},"frontmatter":{"date":"February 06, 2022","update":null,"title":"[scss] @for ~ through / to 차이점","tags":["scss"],"series":null}},{"excerpt":"react를 배우던 초창기에는 를 일일히 써주면서 코딩했던 기억이 있다. \n사이드 프로젝트에서 styled-components를 사용하고 있는데 저 코드를 일일히 썼을 때 디자이너분이 사이즈의 기준을 바꾸거나 하 코딩한 모든 컴포넌트를 수정해야 한다. \nreact로 여러가지 개인 프로젝트나 팀 프로젝트를 진행해보았기 때문에 저런 하드코딩적인 느낌을 지우고…","fields":{"slug":"/2022-01-27-styled-components/"},"frontmatter":{"date":"January 27, 2022","update":null,"title":"[react] styled-components 반응형 스타일 설정하기","tags":["react"],"series":null}},{"excerpt":"맥을 사용하면 터미널로 쉽게 접속이 가능하지만 윈도우로는 터미널 만으로는 ec2 서버에 접속할 수 없다. \n(사실 맥을 주로 이용해서 윈도우는 안된다는 걸 몰랐었는데 집에있는 데스크탑으로 접속하려니 안되서 찾아보니 PuTTY를 이용하라 카더라..) 먼저 자신의 window 환경에 맞는 파일을 다운받는다. PuTTY 다운로드  msi 파일을 설치하면 PuT…","fields":{"slug":"/2022-01-02-aws/"},"frontmatter":{"date":"January 02, 2022","update":null,"title":"[aws] PuTTY로 윈도우에서 aws ec2 ssh 접속하기","tags":["web"],"series":null}},{"excerpt":"현재 진행하고 있는 팀프로젝트에서 rudux와 redux-saga를 사용하고 있다. \n나 외에도 프론트엔드분이 한분 계신데 store에 어떻게 저장할까 하다가 를 사용해 보고 싶어 제안해 보았고 동의해 주셔서 redux-persist를 사용하기로 하였다. redux-persist란 ? react에서 많이 사용하고 있는 redux는 상태관리로 유명한 라이브…","fields":{"slug":"/2021-12-22-react-redux-persist/"},"frontmatter":{"date":"December 22, 2021","update":null,"title":"[react] react프로젝트에 redux-persist 적용하기","tags":["react"],"series":null}},{"excerpt":"MissingInteger. 문제 : codilit MissingInteger\nN개의 정수로 이루어진 배열 A가 있다. A에 존재하지 않는 가장 작은 양의 정수를 반환하는 함수를 작성하는 문제이다.\n(0보다 큰 양의 정수를 반환해야 한다.)\n예를들어, 배열 A가 −1, −3으로 주어졌을때 0보다 큰 1이 반환되어야 한다. Solution: 처음 내가 푼 …","fields":{"slug":"/2021-12-14-codility/"},"frontmatter":{"date":"December 14, 2021","update":null,"title":"[algorithm] Codility Lesson 4. MissingInteger","tags":["algorithm","javascript"],"series":null}},{"excerpt":"최근 비전공자를 위한 개발자 취업 인강을 듣고 있다. 그곳에서 TIL에 대한 용어를 처음 알게되었다.  TIL ? TIL이란 의 약자로 오늘 내가 배운것이라는 뜻이다. \n한국에서는 개발자들 사이에서 많이 쓰이는 용어이지만 외국에서는 SNS상에서 자주 쓰이는 약어라고 한다. \n개발자들은 자신의 기술 블로그를 운영하기 때문에 TIL을 따로 운영하지는 분들은 …","fields":{"slug":"/2021-12-12-gaysby/"},"frontmatter":{"date":"December 12, 2021","update":null,"title":"[gatsby] gaysby로 TIL만들기","tags":["gatsby"],"series":null}},{"excerpt":"정렬된 배열에서 요소를 찾는 것이 정렬되지 않는 배열에서 찾는 것보다 빠르고 쉽다. \n정렬 알고리즘을 사용해 메모리에서 배열을 정렬하거나 정렬된 배열을 파일에 기록할 수 있다. ArrayList함수를 만들어 정렬/검색 대상 데이터를 저장한다.\n(각 알고리즘에 대한 설명은 검색하면 너무 자세하게 나와있기 때문에 코드 위주의 포스팅을 했다.) 1. 버블정렬 …","fields":{"slug":"/2021-12-07-sorting-algorithm/"},"frontmatter":{"date":"December 07, 2021","update":null,"title":"[algorithm] 정렬 알고리즘 - 버블, 삽입, 선택, 병합, 퀵","tags":["algorithm","javascript"],"series":null}},{"excerpt":"알고리즘을 구현하기 전에 알고리즘이 얼마나 효과적인지 분석하는 법을 이해해야 한다.\n알고리즘을 구현할 때 빅오 표기법이 해당 알고리즘이 얼마나 효율적인지를 나타내기 때문에 빅오 표기법은 중요하다.\n효율적인 방법을 고민한다는 것은 시간 복잡도를 고민한다는 것과 같은 말이다. \n Time Complexity (시간 복잡도) 문제를 해결하는데 걸리는 시간과 입…","fields":{"slug":"/2021-12-02-bigO/"},"frontmatter":{"date":"December 02, 2021","update":null,"title":"[algorithm] 자바스크립트 빅오 표기법 (Big-O)","tags":["algorithm","javascript"],"series":null}},{"excerpt":"Word Break. Description: Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words. \n문자열s와 단어들로 이루어진 배열 …","fields":{"slug":"/2021-11-28-algorithm/"},"frontmatter":{"date":"November 28, 2021","update":null,"title":"[algorithm] LeetCode 139. Word Break ","tags":["algorithm","javascript"],"series":null}},{"excerpt":"얼마전부터 사이드 프로젝트를 시작하였다. 프로젝트 인원은 나포함 프론트엔드 개발자 2명, 백엔드 개발자 1명. 3명 다 디자인과는 거리가 먼 사람들이었다. 사이드 프로젝트의 규모가 큰것도 아니라 디자이너를 구하기가 어려웠다. \n디자인적으로 어떻게 할 지 고민을 하다 필자가 사용해본 material ui의 Template를 보고 라이브러리 적용을 권유했고 …","fields":{"slug":"/2021-11-25-mui-react/"},"frontmatter":{"date":"November 27, 2021","update":null,"title":"[react] Material ui 템플릿 (Mui) 으로 회원가입 페이지 만들기 ","tags":["react"],"series":null}},{"excerpt":"프로그래머스에서 자바스크립트 알고리즘 문제를 풀다보면 간간히 접하게 되는 수학관련 문제들이 있다.\n그 중 자연수와 관련된(약수, 소수, 최대공약수, 최소공배수) 문제들이 있었는데 이에 대한 이론을 정리하고 프로그래머스 코딩테스트 연습에 나오는 문제들을 풀어보면서 정확한 개념을 터득하고자 정리해 보았다. \n(문제 - 약수의 합, 약수의 개수와 덧셈, 소수 …","fields":{"slug":"/2021-11-09-algorithm/"},"frontmatter":{"date":"November 09, 2021","update":null,"title":"[algorithm] 약수, 소수, 최대공약수, 최소공배수","tags":["algorithm","javascript"],"series":null}},{"excerpt":"var 선언한 변수의 문제점 ES6의 let과 const가 생기기 전에 변수를 선언할 수 있는 유일한 방법은 var를 사용하는 것이었다. var로 선언된 변수는 다른 언어와는 구별되는 독특한 특징을 가지고 있다. 1. 변수 중복 선언 허용 var 키워드로 선언한 변수는 중복 선언이 가능하다. 예제 1 var로 선언한 변수는 중복 선언이 가능하지만, 초기화…","fields":{"slug":"/2021-10-30-var-let-const/"},"frontmatter":{"date":"October 31, 2021","update":null,"title":"[javascript] var, let, const","tags":["javascript"],"series":null}},{"excerpt":"개인 포트폴리오 프로젝트 중 하나를 firebase를 이용하여 채팅앱을 만들었다. firebase를 이용하여 만들었으니 배포까지 해보자. google firebase에서 프로젝트를 만들어 앱에 연결된 상태이고 build까지 완료된 상태다. 1. CLI 설치 및 firebase 로그인 터미널 창에서 위 코드를 입력하고 로그인을 하면 가 뜨면 Y를 입력하고 …","fields":{"slug":"/2021-10-27-react-firebase/"},"frontmatter":{"date":"October 27, 2021","update":null,"title":"[react] firebase 프로젝트 배포하기","tags":["react","firebase"],"series":null}},{"excerpt":"최근 jekyll로 사용하던 블로그를 gatsby로 바꾸었다. \n처음에 jekyll을 선택했었던 이유를 github으로 시작할 생각이었고 테마가 다양했던 jekyll을 선택했었다. Jeykll에서 Gatsby로 이전한 이유는? 가장 큰 이유는 Jeykll은 Ruby로 만들어졌기 때문에 JS를 주언어로 사용하는 필자에게 어려우면서 생소했다. 프론트엔드 개발…","fields":{"slug":"/2021-10-26-gaysby/"},"frontmatter":{"date":"October 26, 2021","update":null,"title":"[gatsby] Google Search Console과 Analytics 추가하기","tags":["gatsby"],"series":null}},{"excerpt":"클로저(closure)는 자바스크립트 고유의 개념이 아니라 함수형 프로그래밍 언어에서 등장하는 보편적인 특성이다. 개념이 아니기 때문에 ECMAScript 명세서에도 클로저의 정의를 다루지 않고 있어 클로저에 대한 다양한 정의와 설명이 존재한다.  - 더글라스 크록포드 (자바스크립트 핵심 가이드)  - 에딘 브라운 (러닝 자바스크립트)  - 존 레식 (자…","fields":{"slug":"/2021-09-21-closure/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[javascript] closure (클로저)","tags":["javascript"],"series":null}},{"excerpt":"호이스팅(hoisting)이란 '끌어올리다'라는 의미의 hoist + ing를 붙여 만들어졌으며 의미 그대로 끌어올리는 행위로 작동한다. 주로 var로 선언된 변수의 선언문을 코드의 최상단으로 끌어올인다. (변수 정보를 수집하는 과정을 이해하기 쉬운 방법으로 대체한 가상의 개념으로, 자바스크립트 엔진이 실제로 끌어올리지는 않지만 편의상 끌어올린 것으로 간…","fields":{"slug":"/2021-09-21-hoisting/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[javascript] hoisting (호이스팅)","tags":["javascript"],"series":null}},{"excerpt":"1. 실행 컨텍스트 실행 컨텍스트(execution context)는 실행할 코드에 제공할 환경 정보들을 모아놓은 객체로 호이스팅, this 바인딩 등의 정보가 담긴다. 자바스크립트는 어떤 실행 컨텍스트가 활성화되는 시점에 선언된 변수를 위로 끌어올리고(호이스팅), 외부 환경 정보(Lexical Environmen)를 구성하고, this 값을 설정하는 등…","fields":{"slug":"/2021-09-21-scope/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[javascript] execution context, scope (실행 컨텍스트, 스코프)","tags":["javascript"],"series":null}},{"excerpt":"1. assign() 앞서 설명했듯이 target에 pet1이 지정되어 있기때문에 target객체인 pet1에 변화가 생겼다. \n재귀적인 결합을 지원하지 않기때문에 description이 통째로 교체된다(birth → food)는 점에 주의한다.\n만약, sources객체들에 영향을 끼치고 싶지 않다면, 다음과 같이 target에 {}를 지정해주면 빈 객체…","fields":{"slug":"/2021-09-21-object/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[javascript] Object.assign() & Object.create()","tags":["javascript"],"series":null}},{"excerpt":"마케팅이 활성화 되면서 원페이지 및 랜딩페이지의 수가 급증했다. 옛날의 웹페이지라고 하면 복잡하고 전문적인 느낌이었지만 최근에는 일반사용자도 쉽게 만들 수 있는 플랫폼이 많이 생기면서 그 수는 계속 증가하고 있다. 한페이지에 많은 내용들을 담다보면 스크롤이 길어지면서 집중력이 떨어지고 이탈률이 높아진다. 이탈률을 낮춰주는데 도움이 되는 기능 중 한가지가 …","fields":{"slug":"/2021-09-21-scroll/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[html] 특정 영역으로 스크롤 이동 - 앵커기능(anchor) vs data 속성","tags":["html"],"series":null}},{"excerpt":"자바스크립트는 원시타입(기본타입)과 참조타입으로 나뉜다. · 원시타입  Number  String  Boolean  undefined  null 원시타입을 제외한 모든값은 객체다.(즉, 참조타입은 객체다) 참조타입에는 원시타입을 제외한 모든타입, 배열, 함수, 정규표현식 등이 있다. 함수도 객체이기 때문에 값을 처리할 수 있으며 프로퍼티와 메서드도 가지고…","fields":{"slug":"/2021-09-21-function-prototype/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[javascript] 함수의 call, apply, bind 메서드","tags":["javascript"],"series":null}},{"excerpt":"프로젝트를 진행할 때마다 모달창을 마주치는 일이 많다. 프론트엔드 프레임워크나 라이브러리를 사용하면 편리성이나 시간을 아낄 수 있기때문에 npm에 등록된 모듈을 사용하곤 했지만, 만들어진 모듈이 아닌 직접 만들어 재사용해 보기로 했다. 어떻게 만들까?  재사용성 고려하기  Redux없이 만들기  함수형/클래스형 컴포넌트로 각각 만들기 1. 함수형으로 컴포…","fields":{"slug":"/2021-09-21-react-modal/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[react] 모달 팝업창 만들기 (react modal)","tags":["react"],"series":null}},{"excerpt":"퍼블리싱 프리랜서일을 할때면 자주 등장하는 용어가 바로 이란 단어다. 반응형이란 단어와 함께 언급되는 이란 단어도 있으며, 이 두 단어가 나올때마다 '도대체 무슨 차이지?' 라는 의문도 따라온다. 퍼블리싱을 3년동안 했지만 반응형과 적응형의 차이에 대해 명확하게 설명하지 못하고 명확한 차이를 모른다고 생각됐기 때문에 이 두가지는 어떻게 다른지에 대해 알아…","fields":{"slug":"/2021-09-21-rwd-awd/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[web] 반응형(RWD)웹과 적응형(AWD)웹","tags":["web"],"series":null}},{"excerpt":"는 블록 스코프이며, 변수의 재선언 및 재할당이 모두 불가능하다.\n흔히 여기서 오는 오해 중 하나가 const로 정의하면 객체 속성값도 수정할 수 없다고 생각하지만, const로 정의해도 객체의 내부 속성값은 수정이 가능하다. (객체를 참조하는 변수를 수정하는 것은 불가능 하다.) - JS 객체에서 이미 존재하는 속성값을 수정하거나 새로운 값을 추가하는 …","fields":{"slug":"/2021-09-21-javascript-object/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[javascript] 객체 수정 제어 : preventExtensions(), seal(), freeze()","tags":["javascript"],"series":null}},{"excerpt":"\"HTML is the World Wide Web's core markup language. Originally, HTML was primarily designed as a language for semantically describing scientific documents.\"  > - \"HTML은 World Wide Web의 핵심 markup 언어이다…","fields":{"slug":"/2021-09-21-sematic-tag/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[html] Semantic Tag Layout (시맨틱 태그)","tags":["web"],"series":null}},{"excerpt":"새로운 vue 프로젝트 사전미팅에서 장바구니에 담기는 액션을 부탁받았었다.\n\n출처 : react clap button 이런 방식으로 장바구니에 담기는 액션을 부탁받았는데, 아직 vue가 미숙한 나는 어떻게 코딩해야 할지 큰 고민에 빠졌었다. 어떻게 만들까? 1. npm에서 타인이 만든걸 사용할까? npm에서 clap button을 검색하여 위의 박수치는 …","fields":{"slug":"/2021-09-21-vue-clap-button/"},"frontmatter":{"date":"September 21, 2021","update":null,"title":"[vue] 박수치기 버튼 만들기 (vue clap button)","tags":["vue"],"series":null}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}